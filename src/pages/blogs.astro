---
import PageLayout from '../layout/PageLayout.astro';
// types.ts
export interface Blog {
  id: number;
  title: string;
  excerpt: string;
  image: string;
  alt: string;
  tags: string[];
  link: string;
  date: string;
}
export interface BlogSection {
  title: string;
  blogs: Blog[];
}

export const blogSection: BlogSection = {
  title: 'My Blogs',
  blogs: [
    {
      id: 1,
      title: 'Building a Multiplayer Space Shooter',
      excerpt: 'Lessons learned from developing Cosmic Raiders, including networking challenges and procedural generation techniques.',
      image: '/img/blog1.jpg',
      alt: 'Multiplayer Space Shooter',
      tags: ['GameDev', 'Unity', 'Networking'],
      link: '/blogs/multiplayer-space-shooter',
      date: '2025-03-15',
    },
    {
      id: 2,
      title: 'Retro Aesthetics in Modern Games',
      excerpt: 'Exploring how to combine pixel art with modern lighting and physics in Football Duck.',
      image: '/img/blog2.jpg',
      alt: 'Retro Game Aesthetics',
      tags: ['Godot', 'PixelArt', 'GameDesign'],
      link: '/blogs/retro-aesthetics',
      date: '2025-02-28',
    },
    {
      id: 3,
      title: 'Procedural Dungeons in Pixel Dungeon',
      excerpt: 'A deep dive into the procedural generation algorithms used for dungeon layouts and enemy placement.',
      image: '/img/blog3.jpg',
      alt: 'Procedural Dungeons',
      tags: ['Godot', 'Procedural', 'Roguelike'],
      link: '/blogs/procedural-dungeons',
      date: '2025-01-20',
    },
    {
      id: 4,
      title: 'Customizing Mechs in Unreal Engine',
      excerpt: 'How we built a modular mech customization system for Mech Warriors using Unreal Engine.',
      image: '/img/blog4.jpg',
      alt: 'Mech Customization',
      tags: ['Unreal', 'C++', '3D'],
      link: '/blogs/mech-customization',
      date: '2024-12-10',
    },
    {
      id: 5,
      title: 'Scaling Multiplayer in Double Dragon',
      excerpt: 'Optimizing server architecture for large-scale multiplayer battles in Double Dragon.',
      image: '/img/blog5.jpg',
      alt: 'Multiplayer Scaling',
      tags: ['Unity', 'Networking', 'Multiplayer'],
      link: '/blogs/multiplayer-scaling',
      date: '2024-11-05',
    },
    {
      id: 6,
      title: 'Creating Fun Characters in Games',
      excerpt: 'Designing humorous and engaging characters for Fun Fun Fun, with tips for animation and personality.',
      image: '/img/blog6.jpg',
      alt: 'Fun Characters',
      tags: ['Unity', 'Animation', 'GameDesign'],
      link: '/blogs/fun-characters',
      date: '2024-10-15',
    },
  ],
};

// Pagination logic
const blogsPerPage = 6;
const totalPages = Math.ceil(blogSection.blogs.length / blogsPerPage);
const currentPage = Astro.url.searchParams.get('page') ? parseInt(Astro.url.searchParams.get('page')!) : 1;
const paginatedBlogs = blogSection.blogs.slice(
  (currentPage - 1) * blogsPerPage,
  currentPage * blogsPerPage
);
---

<PageLayout>
  <!-- Blogs Section -->
  <section id="blogs" class="bg-red-700 relative pb-16 lg:pb-20 pt-32 lg:pt-40">
    <div class="absolute inset-0 bg-grid"></div>
    <div class="absolute inset-0">
      <div class="absolute left-60 bottom-6">
        <img src="/img/mountain1.png" alt="mountain1" class="w-80">
      </div>
      <div class="absolute right-60 bottom-10">
        <img src="/img/flower.png" alt="flower" class="w-12">
      </div>
      <div class="pipe h-32 left-1/4"></div>
      <div class="pipe h-48 right-1/4"></div>
      <div class="platform w-full bottom-0 h-10"></div>
    </div>
    
    <div class="relative z-10 max-w-6xl mx-auto w-full h-auto min-h-screen px-4">
      <h2 class="text-3xl md:text-4xl mb-12 sm:mb-16 text-white text-center font-game">
        {blogSection.title}
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 lg:gap-10">
        {paginatedBlogs.map((blog: Blog) => (
          <div class="blog-card bg-red-900/60 rounded-lg overflow-hidden shadow-lg backdrop-filter backdrop-blur-sm mx-2">
            <a href={blog.link}>
              <img src={blog.image} alt={blog.alt} class="w-full h-48 object-cover">
            </a>
            <div class="p-6">
              <a href={blog.link}>
                <h3 class="text-xl font-bold mb-2 text-yellow-300 font-game">{blog.title}</h3>
              </a>
              <p class="text-gray-300 text-sm mb-2">{blog.date}</p>
              <p class="text-white mb-4">{blog.excerpt}</p>
              <div class="flex flex-wrap gap-2 mb-4">
                {blog.tags.map((tag) => (
                  <span class="bg-blue-500 px-2 py-1 rounded-full text-xs text-white">{tag}</span>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- Pagination -->
      <div class="mt-12 flex justify-center items-center gap-2">
        <a
          href={currentPage > 1 ? `/blog?page=${currentPage - 1}` : '#'}
          class={`px-4 py-2 rounded-lg text-black ${currentPage === 1 ? 'bg-gray-500 cursor-not-allowed' : 'bg-red-800 hover:bg-red-600'}`}
          aria-disabled={currentPage === 1}
        >
          Previous
        </a>
        
        <div class="flex gap-1">
          {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
            <a
              href={`/blog?page=${page}`}
              class={`px-4 py-2 rounded-lg text-black ${currentPage === page ? 'bg-yellow-300 text-red-900' : 'bg-red-800 hover:bg-red-600'}`}
            >
              {page}
            </a>
          ))}
        </div>
        
        <a
          href={currentPage < totalPages ? `/blog?page=${currentPage + 1}` : '#'}
          class={`px-4 py-2 rounded-lg text-black ${currentPage === totalPages ? 'bg-gray-500 cursor-not-allowed' : 'bg-red-800 hover:bg-red-600'}`}
          aria-disabled={currentPage === totalPages}
        >
          Next
        </a>
      </div>
    </div>
  </section>
</PageLayout>